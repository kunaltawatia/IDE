{"version":3,"sources":["IDE.js","reportWebVitals.js","index.js"],"names":["IDE","useState","output","setOutput","loading","setLoading","codeRef","useRef","inputRef","selectRef","className","id","ref","placeholder","defaultValue","value","onClick","fetch","method","body","JSON","stringify","code","current","input","lang","then","res","text","catch","err","console","error","finally","readOnly","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNA4DeA,MAzDf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEiBF,oBAAS,GAF1B,mBAENG,EAFM,KAEGC,EAFH,KAGPC,EAAUC,iBAAO,MACjBC,EAAWD,iBAAO,MAClBE,EAAYF,iBAAO,MAoBzB,OACE,sBAAKG,UAAU,YAAf,UACE,yCACA,0BACEC,GAAG,OACHC,IAAKN,EACLO,YAAY,OACZC,aAAa,0BAEf,0CACA,0BAAUH,GAAG,QAAQC,IAAKJ,EAAUK,YAAY,UAChD,yBAAQF,GAAG,OAAOC,IAAKH,EAAvB,UACE,wBAAQM,MAAM,KAAd,0BACA,wBAAQA,MAAM,MAAd,oBACA,wBAAQA,MAAM,IAAd,kBAEDX,EACC,wCAEA,wBAAQY,QArCO,WACnBX,GAAW,GACXY,MAAM,IAAK,CACTC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,KAAMhB,EAAQiB,QAAQR,MACtBS,MAAOhB,EAASe,QAAQR,MACxBU,KAAMhB,EAAUc,QAAQR,UAGzBW,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACLzB,EAAUyB,MAEXC,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,MAC7BG,SAAQ,kBAAM5B,GAAW,OAsBxB,oBAEF,2CACA,0BACEM,GAAG,SACHI,MAAOb,EACPgC,UAAU,EACVrB,YAAY,eC1CLsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.db3c6758.chunk.js","sourcesContent":["import { useRef, useState } from \"react\";\nimport \"./IDE.css\";\n\nfunction IDE() {\n  const [output, setOutput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const codeRef = useRef(null);\n  const inputRef = useRef(null);\n  const selectRef = useRef(null);\n\n  const handleSubmit = () => {\n    setLoading(true);\n    fetch(\"/\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        code: codeRef.current.value,\n        input: inputRef.current.value,\n        lang: selectRef.current.value,\n      }),\n    })\n      .then((res) => res.text())\n      .then((text) => {\n        setOutput(text);\n      })\n      .catch((err) => console.error(err))\n      .finally(() => setLoading(false));\n  };\n\n  return (\n    <div className=\"container\">\n      <span>Code:</span>\n      <textarea\n        id=\"code\"\n        ref={codeRef}\n        placeholder=\"Code\"\n        defaultValue=\"print('Hello World!')\"\n      />\n      <span>Input:</span>\n      <textarea id=\"input\" ref={inputRef} placeholder=\"Input\" />\n      <select id=\"lang\" ref={selectRef}>\n        <option value=\"py\">Python 3.6.8</option>\n        <option value=\"cpp\">C++ 14</option>\n        <option value=\"c\">C</option>\n      </select>\n      {loading ? (\n        <p>Loading</p>\n      ) : (\n        <button onClick={handleSubmit}>Submit</button>\n      )}\n      <span>Output:</span>\n      <textarea\n        id=\"output\"\n        value={output}\n        readOnly={true}\n        placeholder=\"Output\"\n      />\n    </div>\n  );\n}\n\nexport default IDE;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport IDE from \"./IDE\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <IDE />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}